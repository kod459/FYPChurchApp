@model PIMS.Entities.Invoice

@{
    ViewBag.Title = "Edit";
   
}

<h2>Details of Invoice @Model.InvoiceId</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.InvoiceId)
   
            <div class="form-group">
                @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control", style = "width:20em;", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", style = "width:20em;", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="right">
            @if (Model.PictureOfInvoice != null)
            {
                var base64 = Convert.ToBase64String(Model.PictureOfInvoice);
                var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                <img src="@imgsrc" style="max-width:500px;max-height:500px" />
            }
        </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control",  style = "width:20em;" , @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChurchId, "Church Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ChurchId", null, htmlAttributes: new { @readonly = "readonly",@class = "form-control", style = "width:20em;" })
                    @Html.ValidationMessageFor(model => model.ChurchId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button id="edit" type="button">Edit</button>
                </div>
            </div>

            <script>
                $('#edit').click(function () {
                    $('#Company').prop("readonly", false);
                    $('#Description').prop("readonly", false);
                    $('#Amount').removeAttr('readonly');
                    $('#ChurchId').removeAttr('readonly');
                    $('#edit').hide();
                    $('#Save').show();

                });
            </script>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    <u>
        @Html.ActionLink("Back to List", "Index")
    </u>
</div>
